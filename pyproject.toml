[project]
name = "titiler-openeo"
description = "TiTiler backend for openEO."
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Vincent Sarago", email = "vincent@developmentseed.com" },
    { name = "Emmanuel Mathot", email = "emmanuel@developmentseed.com" },
]
license = { text = "MIT" }
keywords = [
    "openEO",
    "TiTiler",
    "COG",
    "STAC",
    "Mosaic",
    "FastAPI",
    "Rasterio",
    "rio-tiler",
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
]
dynamic = ["version"]
dependencies = [
    "titiler.core==0.21.0",
    "rio-tiler>=7.4.0,<8.0",
    "starlette-cramjam>=0.4,<0.5",
    "openeo-pg-parser-networkx",
    "pystac-client",
    "pydantic-settings~=2.0",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "httpx",
    "brotlipy",
    "duckdb",
    "sqlalchemy>=2.0.0",
]
dev = ["pre-commit", "bump-my-version"]
docs = [
    "mkdocs>=1.4.3",
    "mkdocs-jupyter>=0.24.5",
    "mkdocs-material[imaging]>=9.5",
    "griffe-inherited-docstrings>=1.0.0",
    "mkdocstrings[python]>=0.25.1",
]
server = ["uvicorn[standard]>=0.12.0,<0.19.0"]
duckdb = ["duckdb"]
postgres = ["sqlalchemy>=2.0.0", "psycopg[pool]"]

[project.urls]
Homepage = "https://developmentseed.org/titiler-openeo/"
Documentation = "https://developmentseed.org/titiler-openeo/"
Issues = "https://github.com/developmentseed/titileropeneo/issues"
Source = "https://github.com/developmentseed/titileropeneo"
Changelog = "https://developmentseed.org/titileropeneo/release-notes/"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "file"
path = "titiler/openeo/__init__.py"

[tool.pdm.build]
includes = ["titiler/openeo"]
excludes = ["tests/", "**/.mypy_cache", "**/.DS_Store"]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.isort]
profile = "black"
known_first_party = ["titiler"]
known_third_party = [
    "rasterio",
    "morecantile",
    "rio_tiler",
    "cogeo_mosaic",
    "geojson_pydantic",
]
default_section = "THIRDPARTY"

[tool.ruff.lint]
select = [
    "D1", # pydocstyle errors
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # flake8
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "D103",
    "D101",
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "B905", # ignore zip() without an explicit strict= parameter, only support with python >3.10
]

[tool.mypy]
no_implicit_optional = true
strict_optional = true
namespace_packages = true
explicit_package_bases = true

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.bumpversion]
current_version = "0.1.0"
search = "{current_version}"
replace = "{new_version}"
regex = false
tag = true
commit = true
tag_name = "{new_version}"

[[tool.bumpversion.files]]
filename = "titiler/openeo/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'
